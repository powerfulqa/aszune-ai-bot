name: Critical Coverage CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  critical-coverage:
    runs-on: ubuntu-latest
    name: Critical File Coverage Enforcement
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Critical Coverage Tests
      run: |
        echo "üîç Running critical file coverage check..."
        npx jest --config=jest.critical-coverage.config.js --coverage --silent --passWithNoTests
        echo "‚úÖ Critical coverage check completed"
      env:
        CI: true
        NODE_ENV: test
    
    - name: Check Coverage Thresholds
      run: |
        echo "üìä Verifying 80% coverage requirement for critical files..."
        if [ $? -eq 0 ]; then
          echo "‚úÖ All critical files meet 80% coverage requirement!"
        else
          echo "‚ùå Critical coverage check failed!"
          echo "üí° Ensure all critical files maintain 80% coverage"
          exit 1
        fi
    
    - name: Upload Coverage to Codecov (Optional)
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./coverage/lcov.info
        flags: critical-files
        name: critical-coverage
        fail_ci_if_error: false

  full-tests:
    runs-on: ubuntu-latest
    needs: critical-coverage  # Only run if critical coverage passes
    if: success()
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Full Test Suite
      run: npm test
      env:
        CI: true
        NODE_ENV: test